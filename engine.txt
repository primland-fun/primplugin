Документация по движку шаблонов плагина.

Специально для этого плагина я написал свой движок заполнителей и шаблонов. Ну как
только для этого плагина... Я потом его в Epsilon использовать буду. Здесь описано
как использовать его. Начнём с заполнителей (placeholders), т.к. это самое лёгкое.


Заполнители имеют один из следующих форматов записи:

    {placeholderName}
    {placeholderName[placeholderData]}

Здесь видно, что заполнители всегда имеют имя (placeholderName), и, иногда, у  них
есть и данные (placeholderData). Эти данные зависят от самого заполнителя. Так,  у
time данные — это формат времени, например, dd.MM.yyyy. Подробнее можно узнать тут:

    https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html

А у заполнителей типа NBT данные — это путь к значению, которое нужно отобразить.
Этот путь разделён точками, например у нас есть следующие NBT-данные предмета:

    {key1: {key2: {key3: "value"}, key4: 1}, keyN: "..."}

И нам нужно добраться до "value", для этого мы указываем такой путь:

    `key1.key2.key3`

Думаю, этой информации по заполнителям хватит.


Теперь я опишу, как работать с шаблонами. Шаблоны — это всякие приколы по типу if.
Все шаблоны имеют начало, содержимое, и конец. А, иногда, они имеют  и  доп. теги.
Некоторые шаблоны имеют, помимо содержимого, данные. Например, `if` строится  так:

    $if[условие]$<данные, или другой шаблон>$endif$
    $if[условие]$<данные, или другой шаблон>$else$<данные, или другой шаблон>$endif$
    $if[условие]$<данные, или другой шаблон>$elif[условие2]$<данные, или другой шаблон>$endif$
    $if[условие]$<данные, или другой шаблон>$elif[условие2]$<данные, или другой шаблон>$endif$
    ...

Мы видим, что шаблон `if` всегда начинается на if и  заканчивается на `endif`. Тем
временем, между ними могут стоять `elif` и/или `else`. Теги `if` и `elif`  имеют в
себе данные. Эти данные — это условие. Указав как условие заполнитель  (без `{}`),
мы говорим: "Если заполнитель N не равен null (нет значения), то...". Или мы можем
проверить значение заполнителя или математического выражения на N результат:

    $if[player.name == 'THooook']$Игрок - администратор проекта$endif$
    $if[player.rep*0.7 == 70]$Шанс выпадения головы {player.name} - минимальный$endif$

Теперь посмотрим на шаблон `format`. Данный шаблон форматирует  строку,  используя
заданные параметры. Параметры указываются в формате `key1=value1,key2=value2`:

    $format[key1=value1,key2=value2]$...$endFormat$

Форматирует этот шаблон содержимое и имеет следующие параметры:

    maxLength - максимальная длина содержимого. Остальное будет перенесено на новую строку.
    format    - формат содержимого, {original} - само содержимое.
    font      - шрифт содержимого. По умолчанию, default.
                  default   - обычные буквы
                  smallcaps - заглавные буквы c размером маленьких букв


Движок так же содержит в себе ряд действий. Действия пишутся в следующем формате:

    [действие]
    [действие: данные]

Как и заполнители, они могут содержать в себе данные. На  данный  момент в  движке
есть следующие действия:

    ignoreLine - указывает на то, что нужно проигнорировать строку, в которой находится это действие